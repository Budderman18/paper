--- a/net/minecraft/world/entity/ai/behavior/BabyFollowAdult.java
+++ b/net/minecraft/world/entity/ai/behavior/BabyFollowAdult.java
@@ -19,12 +_,23 @@
             instance -> instance.group(
                     instance.present(memoryModuleType), instance.registered(MemoryModuleType.LOOK_TARGET), instance.absent(MemoryModuleType.WALK_TARGET)
                 )
-                .apply(instance, (memoryAccessor, memoryAccessor1, memoryAccessor2) -> (level, entity, gameTime) -> {
+                .apply(instance, (memoryAccessor, memoryAccessor1, memoryAccessor2) -> (level, entity, gameTime) -> { final net.minecraft.world.entity.ai.behavior.declarative.MemoryAccessor<?,?> nearestVisibleAdult = memoryAccessor; // Paper - OBFHELPER
                     if (!entity.isBaby()) {
                         return false;
                     } else {
                         LivingEntity livingEntity = instance.get(memoryAccessor);
                         if (entity.closerThan(livingEntity, uniformInt.getMaxValue() + 1) && !entity.closerThan(livingEntity, uniformInt.getMinValue())) {
+                            // CraftBukkit start
+                            org.bukkit.event.entity.EntityTargetLivingEntityEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTargetLivingEvent(entity, livingEntity, org.bukkit.event.entity.EntityTargetEvent.TargetReason.FOLLOW_LEADER);
+                            if (event.isCancelled()) {
+                                return false;
+                            }
+                            if (event.getTarget() == null) {
+                                nearestVisibleAdult.erase();
+                                return true;
+                            }
+                            livingEntity = ((org.bukkit.craftbukkit.entity.CraftLivingEntity) event.getTarget()).getHandle();
+                            // CraftBukkit end
                             WalkTarget walkTarget = new WalkTarget(
                                 new EntityTracker(livingEntity, flag, flag), function.apply(entity), uniformInt.getMinValue() - 1
                             );
