--- a/net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket.java
+++ b/net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket.java
@@ -14,8 +_,27 @@
 
 public record ClientboundLoginDisconnectPacket(Component reason) implements Packet<ClientLoginPacketListener> {
     private static final RegistryOps<JsonElement> OPS = RegistryAccess.EMPTY.createSerializationContext(JsonOps.INSTANCE);
-    public static final StreamCodec<ByteBuf, ClientboundLoginDisconnectPacket> STREAM_CODEC = StreamCodec.composite(
-        ByteBufCodecs.lenientJson(262144).apply(ByteBufCodecs.fromCodec(OPS, ComponentSerialization.CODEC)),
+    // Paper start - Adventure
+    public static final StreamCodec<net.minecraft.network.FriendlyByteBuf, ClientboundLoginDisconnectPacket> STREAM_CODEC = StreamCodec.composite(
+        new net.minecraft.network.codec.StreamCodec<>() {
+            private static final StreamCodec<ByteBuf, JsonElement> VANILLA_JSON = ByteBufCodecs.lenientJson(262144);
+            private static final StreamCodec<ByteBuf, Component> VANILLA = VANILLA_JSON.apply(ByteBufCodecs.fromCodec(OPS, ComponentSerialization.CODEC));
+            @Override
+            public net.minecraft.network.chat.Component decode(final net.minecraft.network.FriendlyByteBuf buffer) {
+                return VANILLA.decode(buffer);
+            }
+
+            @Override
+            public void encode(final net.minecraft.network.FriendlyByteBuf buffer, final net.minecraft.network.chat.Component value) {
+                // In the login phase, buffer.adventure$locale field is most likely null, but plugins may use internals to set it via the channel attribute.
+                final java.util.Locale bufLocale = buffer.adventure$locale;
+                VANILLA_JSON.encode(
+                    buffer,
+                    ComponentSerialization.localizedCodec(bufLocale == null ? java.util.Locale.US : bufLocale).encodeStart(OPS, value).getOrThrow(string -> new io.netty.handler.codec.EncoderException("Failed to encode: " + string + " " + value))
+                );
+            }
+        },
+    // Paper end - Adventure
         ClientboundLoginDisconnectPacket::reason,
         ClientboundLoginDisconnectPacket::new
     );
